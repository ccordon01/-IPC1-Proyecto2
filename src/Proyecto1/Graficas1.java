/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Proyecto1;

import com.itextpdf.text.Annotation;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.Chapter;
import java.io.File;
import java.io.FileInputStream;
import java.io.ObjectInputStream;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.util.Rotation;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
 
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Header;
import com.itextpdf.text.ImgTemplate;
import com.itextpdf.text.Jpeg;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import de.javasoft.plaf.synthetica.SyntheticaBlueSteelLookAndFeel;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.awt.image.WritableRaster;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.net.URL;
import java.text.ParseException;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.jfree.chart.ChartUtilities;
/**
 *
 * @author Julio
 */
public class Graficas1 extends javax.swing.JFrame {
    DefaultListModel modelo= new DefaultListModel();
    ListaCircular listac;
    ListaDoble lidd;

    /**
     * Creates new form Graficas
     */
    public Graficas1() {
        initComponents();
        listac = new ListaCircular();
        lidd= new ListaDoble();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fc = new javax.swing.JFileChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        me = new javax.swing.JComboBox();
        d2 = new javax.swing.JComboBox();
        d1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        graf = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        metrica = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setForeground(new java.awt.Color(204, 255, 255));

        me.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pie", "Barra", "Lineal" }));

        d2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione Dimension2" }));
        d2.setEnabled(false);

        d1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione Dimension1" }));
        d1.setEnabled(false);

        jLabel3.setText("Metrica");

        jLabel1.setText("Dimesion 1");

        jLabel2.setText("Dimension 2");

        graf.setText("Graficar");
        graf.setEnabled(false);
        graf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grafActionPerformed(evt);
            }
        });

        jLabel4.setText("Tipo De Grafica");

        metrica.setEnabled(false);

        jButton1.setText("pdf");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(57, 57, 57)
                        .addComponent(d1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(metrica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(me, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(graf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(graf))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(d1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(d2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(metrica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(me, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Graficar", jPanel1);

        jList1.setModel(modelo);
        jScrollPane1.setViewportView(jList1);

        jScrollPane2.setViewportView(jScrollPane1);

        jButton2.setText("pdf");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Eliminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                        .addGap(34, 34, 34))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(53, 53, 53))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("PDF", jPanel2);

        jMenu1.setText("Archivo");

        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void grafActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grafActionPerformed
        // TODO add your handling code here:
        // Fuente de Datos
        System.out.println(d1.getSelectedItem());
        JFreeChart chart = null,chart2,chart3;
        ChartFrame frame = null;
        String[] arraylis = listac.imprimir2();
        ListaSimple[] arraylista = listac.imprimir3();
        ListaSimple l1 = null, l2 = null,l3=null;
        
        for (int i = 0; i < arraylis.length - 1; i++) {
            if (arraylis[i].equalsIgnoreCase(d1.getSelectedItem().toString())) {
                System.out.println("d1: " + arraylis[i]);
                l1 = arraylista[i];
            }
        }
        for (int i = 0; i < arraylis.length - 1; i++) {
            if (arraylis[i].equalsIgnoreCase(d2.getSelectedItem().toString())) {
                System.out.println("d2:" + arraylis[i]);
                l2 = arraylista[i];
            }
        }
        for (int i = 0; i < arraylis.length - 1; i++) {
            if (arraylis[i].equalsIgnoreCase(metrica.getSelectedItem().toString())) {
                System.out.println("d3:" + arraylis[i]);
                l3 = arraylista[i];
            }
        }
        DefaultPieDataset data = new DefaultPieDataset();
        DefaultCategoryDataset line_chart_dataset = new DefaultCategoryDataset();
        /*data.setValue("C", 40);
         data.setValue("Java", 450);
         data.setValue("Python", 15);*/
        System.out.println("tamaño:" + l2.getsize());
        l2.imprimir();
        System.out.println("++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
        //Ordenar
        String tmp;
        String arr[] = l3.imprimir2();
        String arr1[] = l1.imprimir2();
        String arr2[] = l2.imprimir2();
        try {
            for(int j=1;j<arr.length;j++){
            for (int i = 0; i < arr.length - j; i++) {
                if (Double.parseDouble(arr[i]) > Double.parseDouble(arr[i + 1])) {
                    tmp = arr[i];
                    arr[i] = arr[i + 1];
                    arr[i + 1] = tmp;
                    tmp = arr1[i];
                    arr1[i] = arr1[i + 1];
                    arr1[i + 1] = tmp;
                    tmp = arr2[i];
                    arr2[i] = arr2[i + 1];
                    arr2[i + 1] = tmp;
                }
            }
            
    }
        } catch (Exception e) {
        }
        for (int i = 0; i < l2.getsize(); i++) {
            System.out.println(i);
            try {
              data.setValue(l1.imprimir2()[i], Double.parseDouble(l3.imprimir2()[i]));
            line_chart_dataset.addValue(Double.parseDouble(l3.imprimir2()[i]), l1.imprimir2()[i], l2.imprimir2()[i]);  
            } catch (Exception e) {
            }
            
        }
        try {
            // Creando el Grafico
        chart = ChartFactory.createPieChart(
                d1.getSelectedItem().toString(),
                data,
                true,
                true,
                false);
        chart2 = ChartFactory.createBarChart(d1.getSelectedItem().toString() +"vs"+d2.getSelectedItem().toString(), "", "", line_chart_dataset);
        chart3 = ChartFactory.createLineChart(d1.getSelectedItem().toString() +"vs"+d2.getSelectedItem().toString(), "", "", line_chart_dataset);
        // Mostrar Grafico
        switch (me.getSelectedItem().toString()) {
            case "Pie":
                frame = new ChartFrame("JFreeChart", chart);
                try {
            ChartUtilities.saveChartAsJPEG(new File("E:\\grafico"+(lidd.getsize()+1)+".jpg"), chart, 500, 500);
        } catch (IOException ex) {
            Logger.getLogger(Graficas1.class.getName()).log(Level.SEVERE, null, ex);
        }
                modelo.addElement("grafico"+(lidd.getsize()+1)+".jpg");
                break;
            case "Barra":
                frame = new ChartFrame("JFreeChart", chart2);
                try {
            ChartUtilities.saveChartAsJPEG(new File("E:\\grafico"+(lidd.getsize()+1)+".jpg"), chart2, 500, 500);
        } catch (IOException ex) {
            Logger.getLogger(Graficas1.class.getName()).log(Level.SEVERE, null, ex);
        }
                 modelo.addElement("grafico"+(lidd.getsize()+1)+".jpg");
                break;
            case "Lineal":
                frame = new ChartFrame("JFreeChart", chart3);
                try {
            ChartUtilities.saveChartAsJPEG(new File("E:\\grafico"+(lidd.getsize()+1)+".jpg"), chart3, 500, 500);
        } catch (IOException ex) {
            Logger.getLogger(Graficas1.class.getName()).log(Level.SEVERE, null, ex);
        }
                 modelo.addElement("grafico"+(lidd.getsize()+1)+".jpg");
                break;
                
        }
        
        
        frame.pack();
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Datos Incorrectos");
        }
        
        File file = new File("E:\\grafico"+(lidd.getsize()+1)+".jpg");
        FileInputStream fis = null;
        try {
            fis = new FileInputStream(file);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Graficas1.class.getName()).log(Level.SEVERE, null, ex);
        }
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        byte[] buf = new byte[1024];
        try {
            for (int readNum; (readNum = fis.read(buf)) != -1;) {
                //Writes to this byte array output stream
                bos.write(buf, 0, readNum); 
                System.out.println("read " + readNum + " bytes,");
            }
        } catch (IOException ex) {
            Logger.getLogger(Graficas1.class.getName()).log(Level.SEVERE, null, ex);
        }
 
        byte[] bytes = bos.toByteArray();
        lidd.insertarAlFinal("grafico", bytes);
    }//GEN-LAST:event_grafActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("*.ser", "ser");
        fc.setFileFilter(filtro);
        int opcion = fc.showOpenDialog(jPanel1);
        if (opcion == JFileChooser.APPROVE_OPTION) {
            try {
                //Seleccionamos el fichero
                File fichero = fc.getSelectedFile();
                try {
                    FileInputStream fileIn = new FileInputStream(fichero);
                    ObjectInputStream in = new ObjectInputStream(fileIn);
                    //this.lista = (Lista) in.readObject();
                    listac = (ListaCircular) in.readObject();
                    listac.imprimir();
                    in.close();
                    fileIn.close();
                    System.out.println("Los datos fueron cargados exitosamente!");
                    dataset();
                } catch (Exception e) {
                    System.out.println("Ocurrio un error al cargar el archivo.");
                }
            } catch (Exception ex) {

            }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FileOutputStream archivo = null;
        try {
            archivo = new FileOutputStream("E:\\hola.pdf");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Graficas1.class.getName()).log(Level.SEVERE, null, ex);
        }
      Document documento = new Document();
        try {
            PdfWriter.getInstance(documento, archivo);
        } catch (DocumentException ex) {
            Logger.getLogger(Graficas1.class.getName()).log(Level.SEVERE, null, ex);
        }
      documento.open();
        for(int i=1;i<=lidd.getsize();i++){
            /*try {
                documento.add(new Header("Grafica", "Grafica"+i));
            } catch (DocumentException ex) {
                Logger.getLogger(Graficas1.class.getName()).log(Level.SEVERE, null, ex);
            }
        try {
            documento.add(new Paragraph("Grafica no."+(i)));
        } catch (DocumentException ex) {
            Logger.getLogger(Graficas1.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        try {
            File file = new File("E:\\grafico"+i+".jpg");
        FileInputStream fis = new FileInputStream(file);
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        byte[] buf = new byte[1024];
        try {
            for (int readNum; (readNum = fis.read(buf)) != -1;) {
                //Writes to this byte array output stream
                bos.write(buf, 0, readNum); 
                System.out.println("read " + readNum + " bytes,");
            }
        } catch (IOException ex) {
            Logger.getLogger(Graficas1.class.getName()).log(Level.SEVERE, null, ex);
        }
 
        byte[] bytes = bos.toByteArray();
           documento.add(new Jpeg(bytes));
        } catch (DocumentException ex) {
            Logger.getLogger(Graficas1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Graficas1.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
      documento.close();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            FileOutputStream archivo = null;
        try {
            archivo = new FileOutputStream("E:\\hola.pdf");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Graficas1.class.getName()).log(Level.SEVERE, null, ex);
        }
      Document documento = new Document();
        try {
            PdfWriter.getInstance(documento, archivo);
        } catch (DocumentException ex) {
            Logger.getLogger(Graficas1.class.getName()).log(Level.SEVERE, null, ex);
        }
      documento.open();
        NodoLista1 actual= lidd.primerNodo;
        
        System.out.println(" ");
        while(actual!=null){
            try {
           documento.add(new Jpeg(actual.array));
        } catch (DocumentException ex) {
            Logger.getLogger(Graficas1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Graficas1.class.getName()).log(Level.SEVERE, null, ex);
        }
            actual = actual.siguienteNodo;
        System.out.println("");
        }
        
        
      documento.close();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int i=jList1.getSelectedIndex();
         modelo.removeElementAt(i);
        lidd.pop(i);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            JFrame.setDefaultLookAndFeelDecorated(true);
            JDialog.setDefaultLookAndFeelDecorated(true);
            UIManager.setLookAndFeel(new SyntheticaBlueSteelLookAndFeel());
        } catch (ParseException | UnsupportedLookAndFeelException e) {
            e.printStackTrace();
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Graficas1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox d1;
    private javax.swing.JComboBox d2;
    private javax.swing.JFileChooser fc;
    private javax.swing.JButton graf;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox me;
    private javax.swing.JComboBox metrica;
    // End of variables declaration//GEN-END:variables

    private void dataset() {
        d1.setEnabled(true);
        d2.setEnabled(true);
        graf.setEnabled(true);
        metrica.setEnabled(true);
        String[] arraylis = listac.imprimir2();
        for (int i = 0; i < arraylis.length - 1; i++) {
            //System.out.println(i);
            d1.addItem(arraylis[i]);
            d2.addItem(arraylis[i]);
            metrica.addItem(arraylis[i]);
        }
    }

    private static class Image extends com.itextpdf.text.Image {

        public Image(URL url) {
            super(url);
        }
    }
}
